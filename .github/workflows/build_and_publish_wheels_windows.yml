name: "[windows] Build and publish wheels"

on:
  push:
    branches: windows_build
  workflow_dispatch:
    inputs:
      target:
        description: 'Deployment target. Can be "pypi" or "testpypi"'
        default: 'pypi'

jobs:
  build_wheels:
    name: Build wheels on windows-latest
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==1.9.0

      - name: Install vcpkg
        run: |
          git clone https://github.com/microsoft/vcpkg.git
          .\vcpkg\bootstrap-vcpkg.bat
          mkdir vcpkg_binary_cache

      - name: Cache packages installed through vcpkg
        uses: actions/cache@v2
        env:
          cache-name: vckpg_binary_cache
        with:
          path: C:\Users\runneradmin\AppData\Local\vcpkg\archives
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('vcpkg.json') }}

      - name: Clone pybind11 repo
        run: git clone https://github.com/pybind/pybind11.git

      - name: Build 32 bits wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_ENVIRONMENT: "PYBAMM_USE_VCPKG=ON VCPKG_ROOT_DIR=$cd/vcpkg VCPKG_DEFAULT_TRIPLET=x86-windows-static VCPKG_FEATURE_FLAGS=manifests,registries CMAKE_GENERATOR=\"Visual Studio 16 2019\" CMAKE_GENERATOR_PLATFORM=Win32 VCPKG_DEFAULT_BINARY_CACHE=vcpkg_binary_cache"
          CIBW_ARCHS: "x86"

      - name: Build 64 bits wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_ENVIRONMENT: "PYBAMM_USE_VCPKG=ON VCPKG_ROOT_DIR=$cd/vcpkg VCPKG_DEFAULT_TRIPLET=x64-windows-static VCPKG_FEATURE_FLAGS=manifests,registries CMAKE_GENERATOR=\"Visual Studio 16 2019\" CMAKE_GENERATOR_PLATFORM=x64 VCPKG_DEFAULT_BINARY_CACHE=vcpkg_binary_cache"
          CIBW_ARCHS: "AMD64"

      - uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: ./wheelhouse/*.whl


  publish-pypi:
    name: Upload wheels to PyPI
    needs: build_wheels
    runs-on: ubuntu-latest
    steps:
      - name: Download wheels
        uses: actions/download-artifact@v1
        with:
          name: wheels

      - name: Publish wheels on PyPI
        if: ${{ github.events.inputs.target }} == 'pypi'
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
          packages_dir: wheels/

      - name: Publish wheels on TestPyPI
        if: ${{ github.events.inputs.target }} == 'testpypi'
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.TESTPYPI_TOKEN }}
          packages_dir: wheels/
          repository_url: https://test.pypi.org/legacy/




